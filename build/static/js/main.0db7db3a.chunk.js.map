{"version":3,"sources":["GroceryItem.js","NewItemForm.js","App.js","reportWebVitals.js","index.js"],"names":["GroceryItem","this","props","item","toggleItem","className","style","textDecoration","purchased","onClick","checked","type","name","number","React","Component","NewItemForm","state","itemCount","itemName","submitForm","bind","updateItemCount","updateItemName","event","setState","target","value","preventDefault","addItem","onSubmit","maxWidth","onChange","placeholder","min","aria-label","App","items","addGroceryItem","groceryItem","slice","push","index","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0db7db3a.chunk.js","sourcesContent":["import React from 'react';\n\nclass GroceryItem extends React.Component {\n    render() {\n        let {item, toggleItem} = this.props\n        return (\n            <li>\n                <label \n                className=\"checkbox\"\n                style={{\n                    textDecoration: item.purchased\n                    ? \"line-through\"\n                    : \"none\",\n                }}\n                >\n                    <input onClick={toggleItem} checked={item.purchased} className=\"mr-3\" type=\"checkbox\" />\n                    {item.name} <span className=\"has-text-weight-light\">({item.number})</span>\n                </label>\n            </li>\n        )\n    }\n}\n\nexport default GroceryItem","import React from 'react';\n\n\nclass NewItemForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            itemCount: 1,\n            itemName: \"\",\n        }\n\n        this.submitForm = this.submitForm.bind(this)\n        this.updateItemCount = this.updateItemCount.bind(this)\n        this.updateItemName = this.updateItemName.bind(this)\n    }\n\n    updateItemCount(event) {\n        this.setState({\n            itemCount: event.target.value\n        })\n    }\n\n    updateItemName(event) {\n        this.setState({\n            itemName: event.target.value\n        })\n    }\n\n    submitForm(event) {\n        event.preventDefault()\n\n        let item = {\n            number: this.state.itemCount,\n            name: this.state.itemName,\n            purchased:false\n        }\n\n        this.props.addItem(item)\n\n        this.setState({\n            itemCount: 1,\n            itemName: \"\"\n        })\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submitForm}> \n                <div className=\"field has-addons\">\n                  <div className=\"control\">\n                    <input\n                        style={{ maxWidth : \"6em\"}}\n                        className=\"input\"\n                        value={this.state.itemCount}\n                        onChange={this.updateItemCount}\n                        type=\"number\"\n                        placeholder=\"1\"\n                        min=\"1\"\n                        aria-label=\"number to purchase\" />\n                  </div>\n\n                  <div className=\"control is-expanded\">\n                    <input\n                        className=\"input\"\n                        value={this.state.itemName}\n                        onChange={this.updateItemName}\n                        type=\"text\"\n                        placeholder=\"Item To Buy\"\n                        aria-label=\"item to purchase\" />\n                  </div>\n\n                  <div className=\"control\">\n                    <input\n                        className=\"button is-info\"\n                        type=\"submit\"\n                        value=\"Add Item\" />\n                  </div>\n                </div>\n              </form>\n        )\n    }\n}\n\nexport default NewItemForm","import React from 'react';\nimport GroceryItem from './GroceryItem';\nimport NewItemForm from './NewItemForm';\n\nclass App extends React.Component {\n  constructor(props){ \n    super(props)\n    this.state = {\n      items: [\n        {\n          name: \"Broccoli\",\n          number: 3,\n          purchased: false,\n        },\n        {\n          name: \"Bananas\",\n          number: 6,\n          purchased: true,\n        }\n      ]\n    }\n\n    this.addGroceryItem = this.addGroceryItem.bind(this)\n    this.toggleItem = this.toggleItem.bind(this)\n  }\n\n  addGroceryItem(groceryItem) {\n    let items = this.state.items.slice()\n    items.push(groceryItem)\n    this.setState({items: items})\n  }\n\n  toggleItem(index) {\n    let items = this.state.items.slice()\n    let item = items[index]\n    item.purchased = !item.purchased\n    this.setState({\n      items: items\n    })\n  }\n\n  render() {\n    return (\n      <section className=\"section\">\n        <div className=\"container is-fluid\">\n          <div className=\"columns\">\n            <div className=\"column is-half is-offset-one-quarter\">\n              <h1 className=\"title\">Grocery List</h1>\n\n              <NewItemForm addItem={this.addGroceryItem} />\n\n              <div className=\"my-5\" >\n                <ul>\n                  {this.state.items.map((item, index) => (\n                    <GroceryItem key={index} item={item} toggleItem={() => this.toggleItem(index)} />\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </section>\n    );\n\n  }\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}